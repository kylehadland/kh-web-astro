---
import logo from "/src/assets/KyleHadland-Logo.png"
import { Image } from "astro:assets"
const { title } = Astro.props
const navLinks = [
  {
    href: "/",
    name: "Home",
  },
  {
    href: "/resume",
    name: "Resume",
  },
  {
    href: "/scale",
    name: "Range Tool",
  },
  {
    href: "/contact",
    name: "Contact",
  },
]
const introText =
  "Industrial Control Systems all-rounder from Melbourne, Australia"
import Socials from "./Socials.astro"
// import CreditText from "./CreditText.astro"
import GitBuild from "./GitBuild"
---

<div
  id='header-fixed'
  class='hidden fixed top-0 left-0 h-auto w-full bg-gray-200 z-50 p-1 shadow-md'
>
  <a href='/'><Image class='mx-auto' src={logo} alt={title} height={30} /></a>
</div>
<div class='flex flex-col sm:space-x-4' id='header'>
  <h1 class='font-seaweed font-thin text-2xl mx-auto sm:mx-4'>
    <!-- <a href='/'><img src='/KyleHadland-Logo.png' alt={title} /></a> -->
    <a href='/'><Image src={logo} alt={title} /></a>
  </h1>

  <nav
    class='font-bold uppercase grid grid-cols-2 sm:grid-cols-1 gap-1 mt-3 sm:mt-6 text-center text-xl sm:text-right sm:pr-4'
  >
    {
      navLinks.map((item) => (
        <a class='p-1 block hover:opacity-75' href={item.href}>
          {item.name}
        </a>
      ))
    }
  </nav>

  <p
    class='my-4 sm:m-4 text-center sm:text-left text-base italic text-gray-600'
  >
    {introText}
  </p>

  <div class='flex justify-center space-x-1 mb-4 sm:my-4'>
    <Socials />
  </div>

  <div class='hidden sm:flex justify-center space-x-1 mb-4 sm:my-4 text-xs'>
    <GitBuild client:load />
  </div>
  <!-- <CreditText /> -->
</div>

<script>
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        // const intersecting = entry.isIntersecting
        const almostGone = entry.intersectionRatio > 0.2 ? true : false
        if (almostGone) {
          document.getElementById("header-fixed").classList.add("hidden")
        } else {
          document.getElementById("header-fixed").classList.remove("hidden")
        }
      })
    },
    { threshold: [0.2] }
  )
  observer.observe(document.getElementById("header"))
</script>
